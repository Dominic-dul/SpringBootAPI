package com.visma.meetings.contollers;

import java.util.Date;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PatchMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.visma.meetings.model.Category;
import com.visma.meetings.model.Meeting;
import com.visma.meetings.model.ResponseModel;
import com.visma.meetings.model.Type;
import com.visma.service.MeetingsService;
import com.visma.service.MeetingsServiceImplementation;

@RestController
public class MeetingsContoller {
	
	MeetingsService meetingsService = new MeetingsServiceImplementation();
	
	@PostMapping("/meeting")
	public ResponseModel addMeeting(@RequestBody Meeting meeting) {
		return meetingsService.addMeeting(meeting);
	}
	
	@GetMapping("/meeting/all")
	public ResponseModel fetchAllMeetings() {
		return meetingsService.fetchAllMeetings();
	}
	
	@GetMapping("/meeting/description/{description}")
	public ResponseModel fetchMeetingByDescription(@PathVariable String description) {
		return meetingsService.fetchMeetingByDescription(description);
	}
	
	@GetMapping("/meeting/responsible/{person}")
	public ResponseModel fetchMeetingByResponsiblePerson(@PathVariable String person) {
		return meetingsService.fetchMeetingByResponsiblePerson(person);
	}
	
	@GetMapping("/meeting/category/{category}")
	public ResponseModel fetchMeetingByCategory(@PathVariable Category category) {
		return meetingsService.fetchMeetingByCategory(category);
	}
	
	@GetMapping("/meeting/type/{type}")
	public ResponseModel fetchMeetingByType(@PathVariable Type type) {
		return meetingsService.fetchMeetingByType(type);
	}
	
	@GetMapping("/meeting/attendees/{attendees}")
	public ResponseModel fetchMeetingByAttendees(@PathVariable int attendees) {
		return meetingsService.fetchMeetingByAttendees(attendees);
	}
	
	@GetMapping("/meeting/date/{date}")
	public ResponseModel fetchMeetingByDate(@DateTimeFormat(iso = DateTimeFormat.ISO.DATE) @PathVariable Date date) {
		return meetingsService.fetchMeetingByDate(date);
	}
	
	@DeleteMapping("/meeting/delete/{meetingName}/{responsibleName}")
	public ResponseModel deleteMeeting(@PathVariable String meetingName, @PathVariable String responsibleName) {
		return meetingsService.deleteMeeting(meetingName, responsibleName);
	}
	
	@PatchMapping("/meeting/remove_person_from_meeting/{meetingName}/{personName}")
	public ResponseModel removePersonFromMeeting(@PathVariable String meetingName, @PathVariable String personName) {
		return meetingsService.removePersonFromMeeting(meetingName, personName);
	}
	
	@PatchMapping("/meeting/add_person_to_meeting/{personName}/{time}")
	public ResponseModel addPersonToMeeting(@PathVariable String personName, @PathVariable Date time) {
		return meetingsService.addPersonToMeeting(personName, time);
	}
	
}
