package com.visma.service;

import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.ArrayList;
import java.util.List;

import org.springframework.stereotype.Service;

import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;
import com.visma.meetings.model.Meeting;
import com.visma.meetings.model.ResponseModel;

@Service
public class MeetingsServiceImplementation implements MeetingsService {

	@Override
	public ResponseModel addMeeting(Meeting meeting) {
		ResponseModel responseModel = new ResponseModel();
		
		List<Meeting> meetingData = readJsonFile();
		Meeting meetingPresent = null;
		
		if(!meetingPresent) {
			meetingPresent = meetingData.parallelStream().filter(meet -> meet.getName().equals(meeting.getName())).findAny().orElse(null);
		}
		return null;
	}
	
	public List<Meeting> readJsonFile(){
		List<Meeting> meetings = new ArrayList<>();
		try {
			String json = Files.readString(Path.of("meetings.json"));
			meetings = new Gson().fromJson(json, new TypeToken<List<Meeting>>() {}.getType());
		} catch(Exception e) {
			e.printStackTrace();
		}
		
		return meetings;
	}
	
	public boolean writeJsonFile(List<Meeting> meetingData) {
		boolean status = false;
		try(FileWriter file = new FileWriter("meetings.json")){
			file.write(new Gson().toJson(meetingData));
			file.flush(); //?
		} catch(IOException e) {
			e.printStackTrace();
		}
		
		return status;
	}

}
